(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{29:function(e,t,a){e.exports=a(52)},37:function(e,t,a){},39:function(e,t){},52:function(e,t,a){"use strict";a.r(t);var n=a(5),r=a.n(n),c=a(24),l=a.n(c),i=(a(37),a(28)),o=a(54);const s="/api";var d=function(){const[e,t]=Object(n.useState)(null),[a,c]=Object(n.useState)([]),[l,d]=Object(n.useState)(""),[u,g]=Object(n.useState)(""),[p,h]=Object(n.useState)(""),[m,E]=Object(n.useState)(""),[y,f]=Object(n.useState)(null),v=async()=>{try{const t=await o.a.get(`${s}/candidates`);c(t.data.candidates)}catch(e){console.error("Error fetching candidates:",e)}};return Object(n.useEffect)(()=>{v()},[]),r.a.createElement("div",null,r.a.createElement("h1",null,"E-Voting System"),r.a.createElement("button",{onClick:async()=>{if(window.ethereum)try{const a=new i.a.BrowserProvider(window.ethereum),n=await a.getSigner();t(await n.getAddress())}catch(e){console.error("MetaMask connection failed:",e)}else alert("MetaMask not detected!")}},e?`Connected: ${e}`:"Connect MetaMask"),r.a.createElement("h2",null,"Candidates"),r.a.createElement("ul",null,a.map((t,a)=>r.a.createElement("li",{key:a},t.name," - ",t.votes," votes",r.a.createElement("button",{onClick:()=>(async t=>{try{await o.a.post(`${s}/vote`,{candidateId:t,voterAddress:e}),alert("Vote cast successfully!")}catch(a){console.error("Error casting vote:",a)}})(t.id)},"Vote")))),r.a.createElement("h2",null,"Admin Panel"),r.a.createElement("div",null,r.a.createElement("input",{type:"text",placeholder:"Candidate Name",value:l,onChange:e=>d(e.target.value)}),r.a.createElement("button",{onClick:async()=>{try{await o.a.post(`${s}/addCandidate`,{name:l}),alert("Candidate added successfully!"),v()}catch(e){console.error("Error adding candidate:",e)}}},"Add Candidate")),r.a.createElement("div",null,r.a.createElement("input",{type:"text",placeholder:"Voter Address",value:u,onChange:e=>g(e.target.value)}),r.a.createElement("button",{onClick:async()=>{try{await o.a.post(`${s}/addVoter`,{address:u}),alert("Voter added successfully!")}catch(e){console.error("Error adding voter:",e)}}},"Add Voter")),r.a.createElement("h2",null,"OTP Authentication"),r.a.createElement("div",null,r.a.createElement("input",{type:"email",placeholder:"Enter Email",value:p,onChange:e=>h(e.target.value)}),r.a.createElement("button",{onClick:async()=>{try{await o.a.post(`${s}/sendOTP`,{email:p}),alert("OTP sent successfully!")}catch(e){console.error("Error sending OTP:",e)}}},"Send OTP")),r.a.createElement("div",null,r.a.createElement("input",{type:"text",placeholder:"Enter OTP",value:m,onChange:e=>E(e.target.value)}),r.a.createElement("button",{onClick:async()=>{try{(await o.a.post(`${s}/verifyOTP`,{email:p,otp:m})).data.verified?alert("OTP Verified!"):alert("Invalid OTP!")}catch(e){console.error("Error verifying OTP:",e)}}},"Verify OTP")),r.a.createElement("h2",null,"Fingerprint Authentication"),r.a.createElement("button",{onClick:async()=>{try{const a="sample_fingerprint_hash";await o.a.post(`${s}/registerFingerprint`,{voterAddress:e,fingerprintHash:a}),alert("Fingerprint registered successfully!")}catch(t){console.error("Error registering fingerprint:",t)}}},"Register Fingerprint"),r.a.createElement("button",{onClick:async()=>{try{const a="sample_fingerprint_hash";(await o.a.post(`${s}/authenticateFingerprint`,{voterAddress:e,fingerprintHash:a})).data.authenticated?alert("Fingerprint authenticated successfully!"):alert("Fingerprint authentication failed!")}catch(t){console.error("Error authenticating fingerprint:",t)}}},"Authenticate Fingerprint"))};var u=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,55)).then(t=>{let{getCLS:a,getFID:n,getFCP:r,getLCP:c,getTTFB:l}=t;a(e),n(e),r(e),c(e),l(e)})};l.a.createRoot(document.getElementById("root")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(d,null))),u()}},[[29,1,2]]]);
//# sourceMappingURL=main.e3e2c276.chunk.js.map